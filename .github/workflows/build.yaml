name: Build & Test
on:
  workflow_dispatch:
  push:
  pull_request:
    types: [opened]
  pull_request_target:
    branches:
      - "*"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        optimization: [-O, -O1, -O2, -O3, -Ofast, -Og, -Os]
        include:
          - cxx: g++
            os: windows-latest
          - cxx: g++-11
            os: ubuntu-latest
    name: ${{ matrix.os }}${{ matrix.optimization }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install mingw --version 11.2.0.07112021 --force
          make --version
          gcc --version
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc-11 g++-11 make
          make --version
          gcc-11 --version
          g++-11 --version
          mkdir -p ./bin
      - name: Configure
        shell: bash
        run: |
          make -B install
      - name: Build
        shell: bash
        run: |
          make -B clean build build_tests COMPILER_CPP=${{ matrix.cxx }} OPTIMIZATION_LEVEL=${{ matrix.optimization }}
      - name: Prepare speed test
        shell: bash
        run: |
          mkdir -p ./benchmark/performance/${{ matrix.os }};
      - name: ${{ matrix.optimization }}
        shell: bash
        timeout-minutes: 100
        run: |
          make -B run_tests
          make -B run_tests > ./bin/log/performance.txt
          cp ./bin/log/performance.txt ./benchmark/performance/${{ matrix.os }}/performance${{ matrix.optimization }}.txt
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}${{ matrix.optimization }}
          path: |
            ./benchmark/performance/${{ matrix.os }}/performance${{ matrix.optimization }}.txt
  group-results:
    name: Summarize
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Display structure of downloaded files
        run: ls -R
      - name: Craft final document
        shell: bash
        run: |
          for i in */* ; 
          do 
            echo $i | cut -d'/' -f1 ; 
            paste <(cat $i | grep ') WebFrame - integration testing The web server  should respond to request with' | cut -d'^' -f2 | sed -e 's/^/2\^/') \
                  <(cat $i | grep "Would have been nice" | cut -d'|' -f2) | 
                sed 's/Would have been nice/expected\t/g' | 
                sed 's/but got/\tbut got\t/g' |
                sed 's/[ \t][ \t]*/ /g' ; 
            echo "";
          done > summary.txt;
          cat summary.txt;
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Summary
          path: |
            summary.txt