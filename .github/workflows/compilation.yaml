#run-name: Compile & Build
on:
  workflow_dispatch:
  push:
  pull_request:
    types: [opened]
  pull_request_target:
    branches:
      - "*"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        inja: [ON, OFF]
    macos-clang-build:
      runs-on: macos-latest
      name: MacOS Clang Build
      steps:
        - uses: actions/checkout@v3
          with:
            submodules: 'recursive'
        - name: Install dependencies on MacOS
          run: |
            brew install llvm cmake
            cmake --version
            clang++ --version
        - name: Configure with Clang
          shell: bash
          run: |
            CXX_COMPILE=clang++ cmake -DUSE_MYSQL=OFF -G 'Unix Makefiles' .
        - name: Build
          shell: bash
          run: |
            make
        - name: Run tests
          shell: bash
          run: |
            ./Core-Tests
    windows-msvc-build:
      runs-on: windows-latest
      name: Windows MSVC++ Build
      steps:
        - uses: actions/checkout@v3
          with:
            submodules: 'recursive'
        - uses: ilammy/msvc-dev-cmd@v1.4.1
        - name: Install dependencies on windows
          run: |
            cmake --version
        - name: Configure with MSVC++
          shell: bash
          run: |
            CXX_COMPILE=cl cmake -DUSE_MYSQL=OFF -G 'MinGW Makefiles' .
        - name: Build
          shell: bash
          run: |
            make
        - name: Run tests
          shell: bash
          run: |
            ./Core-Tests
    windows-mingw-build:
      runs-on: windows-latest
      name: Windows MinGW Build
      steps:
        - uses: actions/checkout@v3
          with:
            submodules: 'recursive'
        - name: Install dependencies on windows
          run: |
            choco install mingw --version 11.2.0.07112021
            cmake --version
            gcc --version
        - name: Configure with MinGW
          shell: bash
          run: |
            CXX_COMPILE=g++ cmake -DUSE_MYSQL=OFF -G 'MinGW Makefiles' .
        - name: Build
          shell: bash
          run: |
            make
        - name: Run tests
          shell: bash
          run: |
            ./Core-Tests
    windows-clang-build:
      runs-on: windows-latest
      name: Windows Clang Build
      steps:
        - uses: actions/checkout@v3
          with:
            submodules: 'recursive'
        - name: Install dependencies on windows
          run: |
            choco install llvm
            cmake --version
            clang++ --version
        - name: Configure with MinGW
          shell: bash
          run: |
            CXX_COMPILE=clang++ cmake -DUSE_MYSQL=OFF -G 'MinGW Makefiles' .
        - name: Build
          shell: bash
          run: |
            make
        - name: Run tests
          shell: bash
          run: |
            ./Core-Tests
    ubuntu-gcc-build:
      name: Ubuntu GNU Build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            submodules: 'recursive'
        - name: Install dependencies on ubuntu
          run: |
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            sudo apt-get update
            sudo apt-get install -y gcc-11 g++-11 make tree
            cmake --version
            gcc-11 --version
            g++-11 --version
        - name: Configure for Ubuntu
          shell: bash
          run: |
            CXX_COMPILE=g++ cmake -DUSE_MYSQL=OFF -G 'Unix Makefiles' . 
        - name: Build
          shell: bash
          run: |
            make
        - name: Tree
          shell: bash
          run: |
            tree
        - name: Run tests
          shell: bash
          run: |
            ./Core-Tests
    ubuntu-clang-build:
      name: Ubuntu Clang Build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            submodules: 'recursive'
        - name: Install dependencies on ubuntu
          run: |
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            sudo apt-get update
            sudo apt-get install -y clang make tree
            cmake --version
            clang++ --version
        - name: Configure for Ubuntu
          shell: bash
          run: |
            CXX_COMPILE=clang++ cmake -DUSE_MYSQL=OFF -G 'Unix Makefiles' . 
        - name: Build
          shell: bash
          run: |
            make
        - name: Tree
          shell: bash
          run: |
            tree
        - name: Run tests
          shell: bash
          run: |
            ./Core-Tests