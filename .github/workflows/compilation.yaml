run-name: Compile & Build / ${{ github.event.head_commit.message }}
name: Compile & Build
on:
  workflow_dispatch:
  push:
  pull_request:
    types: [opened]
  pull_request_target:
    branches:
      - "*"

jobs:
  macos-build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
        inja: [ON, OFF]
    name: MacOS / ${{ matrix.os }} / clang++ / Inja ${{ matrix.inja }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install dependencies on ${{ matrix.os }}
        run: |
          brew install llvm cmake
          cmake --version
          clang++ --version
      - name: Configure with Clang
        shell: bash
        run: |
          CC=clang CXX=clang++ cmake -DUSE_INJA=${{ matrix.inja }} -G 'Unix Makefiles' .
      - name: Build
        shell: bash
        run: |
          make
      - name: Run tests
        shell: bash
        run: |
          mkdir -p ./tests/bin/log ./bin/log
          ./tests/Core-Tests
          ./tests/Core-Tests | sed -E "s/`printf "\033"`\[([0-9]+)(;1)?m//g" | cat > ./bin/log/performance.txt
  windows-build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]
        cxx: [cl, clang++, g++]
        cc: [cl, clang, gcc]
        inja: [ON, OFF]
    name: Windows / ${{ matrix.os }} / ${{ matrix.compiler }} / Inja ${{ matrix.inja }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - uses: ilammy/msvc-dev-cmd@v1.4.1
      - name: Compilers setup
        run: |
          choco install llvm
          choco install mingw --version 11.2.0.07112021
      - name: Configure with ${{ matrix.compiler }}
        shell: bash
        run: |
          CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} cmake -DUSE_INJA=${{ matrix.inja }} -G 'MinGW Makefiles' .
      - name: Build
        shell: bash
        run: |
          make
      - name: Setup
        shell: bash
        run: |
          mkdir -p ./tests/bin/log
          mkdir -p ./bin/log
      - name: Run tests
        shell: bash
        run: |
          ./tests/Core-Tests
  ubuntu-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        cxx: [clang++, g++]
        cc: [clang, gcc]
        inja: [ON, OFF]
    name: Ubuntu / ${{ matrix.os }} / ${{ matrix.compiler }} / Inja ${{ matrix.inja }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Compilers setup
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y llvm g++-11 gcc-11
      - name: Configure with ${{ matrix.compiler }}
        shell: bash
        run: |
          CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} cmake -DUSE_INJA=${{ matrix.inja }} -G 'Unix Makefiles' .
      - name: Build
        shell: bash
        run: |
          make
      - name: Run tests
        shell: bash
        run: |
          mkdir -p ./tests/bin/log ./bin/log
          ./tests/Core-Tests
          ./tests/Core-Tests | sed -E "s/`printf "\033"`\[([0-9]+)(;1)?m//g" | cat > ./bin/log/performance.txt