name: Benchmarks

on:
  workflow_dispatch:
  workflow_run:
    workflows: [Doxygen]
    types: [completed]
    branches:
      - '**'

jobs:
  build:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failed' }}
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install & Build üîß
        shell: bash
        run: |
          make install
          make -B benchmark
      - name: Pack üì¶
        run: |
          mkdir -p benchmark/report;
          mv benchmark/tmp/test1.result benchmark/report/;
          mv benchmark/tmp/test2.result benchmark/report/;
          echo "Test 1";
          cat benchmark/report/test1.result;
          echo "Test 2";
          cat benchmark/report/test2.result;
          echo "<style>table,th,td{border:1px solid red;border-collapse:collapse;text-align:center;}th,td{color: #111;background-color: white;}</style><table><tr><th>C++</th><th>Python</th><th>Node.JS Express</th>" > benchmark/report/test1.results.html; cat benchmark/report/test1.result | sed ':a;N;$!ba;s/C++\t//g' | sed ':a;N;$!ba;s/<1> Python//g' | sed ':a;N;$!ba;s/<2> Node.JS Express//g' | sed ':a;N;$!ba;s/\t/ /g' | sed ':a;N;$!ba;s/  /<td>/g' | sed 's/s/s<\/td>/g' | sed 's/^/<\/tr><tr><td>/g' >> benchmark/report/test1.results.html; echo "</tr></table>" >> benchmark/report/test1.results.html;
          echo "<style>table,th,td{border:1px solid red;border-collapse:collapse;text-align:center;}th,td{color: #111;background-color: white;}</style><table><tr><th>C++</th><th>Python</th><th>Node.JS Express</th>" > benchmark/report/test2.results.html; cat benchmark/report/test2.result | sed ':a;N;$!ba;s/C++\t//g' | sed ':a;N;$!ba;s/<1> Python//g' | sed ':a;N;$!ba;s/<2> Node.JS Express//g' | sed ':a;N;$!ba;s/\t/ /g' | sed ':a;N;$!ba;s/  /<td>/g' | sed 's/s/s<\/td>/g' | sed 's/^/<\/tr><tr><td>/g' >> benchmark/report/test2.results.html; echo "</tr></table>" >> benchmark/report/test2.results.html;
          echo "<h1>Test 1:</h1>" > benchmark/report/index.html; cat benchmark/report/test1.results.html >> benchmark/report/index.html;
          echo "<h1>Test 2:</h1>" >> benchmark/report/index.html; cat benchmark/report/test2.results.html >> benchmark/report/index.html;
        shell: bash
      - name: Upload Report üöÄ
        uses: actions/upload-artifact@v1
        with:
          name: benchmark_report
          path: benchmark/report/
      - name: Renaming
        shell: bash
        run: |
          mkdir -p benchmark/benchmark/
          mv -f benchmark/report/ benchmark/benchmark/report/
          cp -rf ./benchmark/benchmark/* src-gh-pages/
      - name: Commit
        shell: bash
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add src-gh-pages/
          git commit -m "Benchmarks report" -a
      - name: Push cppcheck results
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      - name: Deploy to GitHub Pages üöÄ
        continue-on-error: true
        if: ${{ always() && github.ref == 'refs/heads/master' }}
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: ./src-gh-pages # The folder the action should deploy.
      - name: Commit
        shell: bash
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git rm -rf src-gh-pages/
          git commit -m "GH Pages files removed" -a
      - name: Push cppcheck results
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}